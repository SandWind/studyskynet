// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moblie.proto

#include "moblie.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mycell {
namespace moblie {
constexpr moblie::moblie(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apps_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , systemname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , model_(0)
{}
struct moblieDefaultTypeInternal {
  constexpr moblieDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~moblieDefaultTypeInternal() {}
  union {
    moblie _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT moblieDefaultTypeInternal _moblie_default_instance_;
}  // namespace moblie
}  // namespace mycell
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_moblie_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_moblie_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_moblie_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_moblie_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mycell::moblie::moblie, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mycell::moblie::moblie, name_),
  PROTOBUF_FIELD_OFFSET(::mycell::moblie::moblie, model_),
  PROTOBUF_FIELD_OFFSET(::mycell::moblie::moblie, systemname_),
  PROTOBUF_FIELD_OFFSET(::mycell::moblie::moblie, apps_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mycell::moblie::moblie)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mycell::moblie::_moblie_default_instance_),
};

const char descriptor_table_protodef_moblie_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014moblie.proto\022\rmycell.moblie\032\napps.prot"
  "o\"c\n\006moblie\022\014\n\004name\030\001 \001(\t\022#\n\005model\030\002 \001(\016"
  "2\024.mycell.moblie.Brand\022\022\n\nsystemName\030\003 \001"
  "(\t\022\022\n\004apps\030\004 \003(\0132\004.App*K\n\005Brand\022\013\n\007unkno"
  "wn\020\000\022\n\n\006huawei\020\001\022\n\n\006xiaomi\020\002\022\010\n\004oppo\020\003\022\010"
  "\n\004vivo\020\004\022\t\n\005apple\020\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_moblie_2eproto_deps[1] = {
  &::descriptor_table_apps_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_moblie_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_moblie_2eproto = {
  false, false, 227, descriptor_table_protodef_moblie_2eproto, "moblie.proto", 
  &descriptor_table_moblie_2eproto_once, descriptor_table_moblie_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_moblie_2eproto::offsets,
  file_level_metadata_moblie_2eproto, file_level_enum_descriptors_moblie_2eproto, file_level_service_descriptors_moblie_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_moblie_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_moblie_2eproto);
  return descriptor_table_moblie_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_moblie_2eproto(&descriptor_table_moblie_2eproto);
namespace mycell {
namespace moblie {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brand_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_moblie_2eproto);
  return file_level_enum_descriptors_moblie_2eproto[0];
}
bool Brand_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class moblie::_Internal {
 public:
};

void moblie::clear_apps() {
  apps_.Clear();
}
moblie::moblie(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  apps_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mycell.moblie.moblie)
}
moblie::moblie(const moblie& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  systemname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_systemname().empty()) {
    systemname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_systemname(), 
      GetArena());
  }
  model_ = from.model_;
  // @@protoc_insertion_point(copy_constructor:mycell.moblie.moblie)
}

void moblie::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
systemname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
model_ = 0;
}

moblie::~moblie() {
  // @@protoc_insertion_point(destructor:mycell.moblie.moblie)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void moblie::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  systemname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void moblie::ArenaDtor(void* object) {
  moblie* _this = reinterpret_cast< moblie* >(object);
  (void)_this;
}
void moblie::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void moblie::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void moblie::Clear() {
// @@protoc_insertion_point(message_clear_start:mycell.moblie.moblie)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  name_.ClearToEmpty();
  systemname_.ClearToEmpty();
  model_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* moblie::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mycell.moblie.moblie.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mycell.moblie.Brand model = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model(static_cast<::mycell::moblie::Brand>(val));
        } else goto handle_unusual;
        continue;
      // string systemName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_systemname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mycell.moblie.moblie.systemName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .App apps = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* moblie::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mycell.moblie.moblie)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mycell.moblie.moblie.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .mycell.moblie.Brand model = 2;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_model(), target);
  }

  // string systemName = 3;
  if (this->systemname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_systemname().data(), static_cast<int>(this->_internal_systemname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mycell.moblie.moblie.systemName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_systemname(), target);
  }

  // repeated .App apps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_apps(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mycell.moblie.moblie)
  return target;
}

size_t moblie::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mycell.moblie.moblie)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .App apps = 4;
  total_size += 1UL * this->_internal_apps_size();
  for (const auto& msg : this->apps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string systemName = 3;
  if (this->systemname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_systemname());
  }

  // .mycell.moblie.Brand model = 2;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_model());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void moblie::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mycell.moblie.moblie)
  GOOGLE_DCHECK_NE(&from, this);
  const moblie* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<moblie>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mycell.moblie.moblie)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mycell.moblie.moblie)
    MergeFrom(*source);
  }
}

void moblie::MergeFrom(const moblie& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mycell.moblie.moblie)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.systemname().size() > 0) {
    _internal_set_systemname(from._internal_systemname());
  }
  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
}

void moblie::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mycell.moblie.moblie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void moblie::CopyFrom(const moblie& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mycell.moblie.moblie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool moblie::IsInitialized() const {
  return true;
}

void moblie::InternalSwap(moblie* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  apps_.InternalSwap(&other->apps_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  systemname_.Swap(&other->systemname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(model_, other->model_);
}

::PROTOBUF_NAMESPACE_ID::Metadata moblie::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace moblie
}  // namespace mycell
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mycell::moblie::moblie* Arena::CreateMaybeMessage< ::mycell::moblie::moblie >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mycell::moblie::moblie >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
